-- MySQL Script generated by MySQL Workbench
-- Tue Nov 24 15:04:23 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema default_schema
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema database
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `database` ;

-- -----------------------------------------------------
-- Schema database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `database` DEFAULT CHARACTER SET utf8 ;
USE `database` ;

-- -----------------------------------------------------
-- Table `database`.`user_level`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`user_level` ;

CREATE TABLE IF NOT EXISTS `database`.`user_level` (
  `id` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`company` ;

CREATE TABLE IF NOT EXISTS `database`.`company` (
  `id` VARCHAR(64) NOT NULL,
  `name` VARCHAR(64) NOT NULL,
  `city` VARCHAR(64) NOT NULL,
  `address` VARCHAR(128) NOT NULL,
  `postal_code` INT NOT NULL,
  `email` VARCHAR(64) NOT NULL,
  `phone_number` VARCHAR(20) NOT NULL,
  `website` VARCHAR(64) NULL DEFAULT NULL,
  `description` TEXT(65535) NULL DEFAULT NULL,
  `logo` VARCHAR(1024) NULL DEFAULT NULL,
  `field` VARCHAR(64) NOT NULL,
  `user_level_id` INT NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_company_user_level_idx` (`user_level_id` ASC),
  CONSTRAINT `fk_company_user_level`
    FOREIGN KEY (`user_level_id`)
    REFERENCES `database`.`user_level` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`resume`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`resume` ;

CREATE TABLE IF NOT EXISTS `database`.`resume` (
  `id` VARCHAR(64) NOT NULL,
  `title` VARCHAR(64) NULL DEFAULT NULL,
  `description` MEDIUMTEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`student` ;

CREATE TABLE IF NOT EXISTS `database`.`student` (
  `oib` BIGINT NOT NULL,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `age` INT NOT NULL,
  `email` VARCHAR(64) NOT NULL,
  `phone_number` VARCHAR(20) NULL DEFAULT NULL,
  `city` VARCHAR(64) NOT NULL,
  `address` VARCHAR(128) NULL DEFAULT NULL,
  `postal_code` INT NULL DEFAULT NULL,
  `university` VARCHAR(128) NOT NULL,
  `picture` VARCHAR(1024) NULL DEFAULT NULL,
  `user_level_id` INT NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `resume_id` VARCHAR(64) NULL,
  PRIMARY KEY (`oib`),
  UNIQUE INDEX `oib_UNIQUE` (`oib` ASC),
  INDEX `fk_student_user_level1_idx` (`user_level_id` ASC),
  INDEX `fk_student_resume1_idx` (`resume_id` ASC),
  CONSTRAINT `fk_student_user_level1`
    FOREIGN KEY (`user_level_id`)
    REFERENCES `database`.`user_level` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_student_resume1`
    FOREIGN KEY (`resume_id`)
    REFERENCES `database`.`resume` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`internship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`internship` ;

CREATE TABLE IF NOT EXISTS `database`.`internship` (
  `id` VARCHAR(64) NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `position` VARCHAR(45) NOT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  `city` VARCHAR(64) NOT NULL,
  `requirements` MEDIUMTEXT NOT NULL,
  `status` TINYTEXT NOT NULL,
  `salary` INT NOT NULL,
  `deadline` DATETIME NOT NULL,
  `company_id` VARCHAR(64) NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`, `company_id`),
  INDEX `fk_internship_company1_idx` (`company_id` ASC),
  CONSTRAINT `fk_internship_company1`
    FOREIGN KEY (`company_id`)
    REFERENCES `database`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`work_experience`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`work_experience` ;

CREATE TABLE IF NOT EXISTS `database`.`work_experience` (
  `id` VARCHAR(64) NOT NULL,
  `title` VARCHAR(64) NOT NULL,
  `country` VARCHAR(64) NOT NULL,
  `city` VARCHAR(64) NOT NULL,
  `start_month` VARCHAR(45) NULL DEFAULT NULL,
  `end_month` VARCHAR(45) NULL DEFAULT NULL,
  `start_year` INT NULL DEFAULT NULL,
  `end_year` INT NULL DEFAULT NULL,
  `description` VARCHAR(128) NULL DEFAULT NULL,
  `resume_id` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_work_experience_resume1_idx` (`resume_id` ASC),
  CONSTRAINT `fk_work_experience_resume1`
    FOREIGN KEY (`resume_id`)
    REFERENCES `database`.`resume` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`education`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`education` ;

CREATE TABLE IF NOT EXISTS `database`.`education` (
  `id` VARCHAR(64) NOT NULL,
  `start_year` INT NULL DEFAULT NULL,
  `end_year` INT NULL DEFAULT NULL,
  `title` VARCHAR(128) NOT NULL,
  `country` VARCHAR(64) NOT NULL,
  `city` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`skill` ;

CREATE TABLE IF NOT EXISTS `database`.`skill` (
  `id` VARCHAR(64) NOT NULL,
  `name` VARCHAR(64) NOT NULL,
  `level` INT NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`language` ;

CREATE TABLE IF NOT EXISTS `database`.`language` (
  `id` VARCHAR(64) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `level` INT NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`keyword`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`keyword` ;

CREATE TABLE IF NOT EXISTS `database`.`keyword` (
  `id` VARCHAR(64) NOT NULL,
  `category` VARCHAR(64) NOT NULL,
  `word` VARCHAR(32) NOT NULL,
  `resume_id` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`review`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`review` ;

CREATE TABLE IF NOT EXISTS `database`.`review` (
  `id` VARCHAR(64) NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` INT NOT NULL,
  `text` LONGTEXT NOT NULL,
  `company_id` VARCHAR(64) NOT NULL,
  `student_oib` BIGINT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_review_company1_idx` (`company_id` ASC),
  INDEX `fk_review_student1_idx` (`student_oib` ASC),
  CONSTRAINT `fk_review_company1`
    FOREIGN KEY (`company_id`)
    REFERENCES `database`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_student1`
    FOREIGN KEY (`student_oib`)
    REFERENCES `database`.`student` (`oib`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`application`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`application` ;

CREATE TABLE IF NOT EXISTS `database`.`application` (
  `internship_id` VARCHAR(64) NOT NULL,
  `company_id` VARCHAR(64) NOT NULL,
  `student_oib` BIGINT NOT NULL,
  PRIMARY KEY (`internship_id`, `student_oib`, `company_id`),
  INDEX `fk_internship_has_student_student1_idx` (`student_oib` ASC),
  INDEX `fk_internship_has_student_internship1_idx` (`internship_id` ASC, `company_id` ASC),
  CONSTRAINT `fk_internship_has_student_internship1`
    FOREIGN KEY (`internship_id` , `company_id`)
    REFERENCES `database`.`internship` (`id` , `company_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_internship_has_student_student1`
    FOREIGN KEY (`student_oib`)
    REFERENCES `database`.`student` (`oib`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`resume_education`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`resume_education` ;

CREATE TABLE IF NOT EXISTS `database`.`resume_education` (
  `education_id` VARCHAR(64) NOT NULL,
  `resume_id` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`education_id`, `resume_id`),
  INDEX `fk_education_has_resume_resume1_idx` (`resume_id` ASC),
  INDEX `fk_education_has_resume_education1_idx` (`education_id` ASC) ,
  CONSTRAINT `fk_education_has_resume_education1`
    FOREIGN KEY (`education_id`)
    REFERENCES `database`.`education` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_education_has_resume_resume1`
    FOREIGN KEY (`resume_id`)
    REFERENCES `database`.`resume` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`resume_keyword`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`resume_keyword` ;

CREATE TABLE IF NOT EXISTS `database`.`resume_keyword` (
  `resume_id` VARCHAR(64) NOT NULL,
  `keyword_id` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`resume_id`, `keyword_id`),
  INDEX `fk_resume_has_keyword_keyword1_idx` (`keyword_id` ASC),
  INDEX `fk_resume_has_keyword_resume1_idx` (`resume_id` ASC),
  CONSTRAINT `fk_resume_has_keyword_resume1`
    FOREIGN KEY (`resume_id`)
    REFERENCES `database`.`resume` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_resume_has_keyword_keyword1`
    FOREIGN KEY (`keyword_id`)
    REFERENCES `database`.`keyword` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`resume_skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`resume_skill` ;

CREATE TABLE IF NOT EXISTS `database`.`resume_skill` (
  `resume_id` VARCHAR(64) NOT NULL,
  `skill_id` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`resume_id`, `skill_id`),
  INDEX `fk_resume_has_skill_skill1_idx` (`skill_id` ASC) ,
  INDEX `fk_resume_has_skill_resume1_idx` (`resume_id` ASC),
  CONSTRAINT `fk_resume_has_skill_resume1`
    FOREIGN KEY (`resume_id`)
    REFERENCES `database`.`resume` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_resume_has_skill_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `database`.`skill` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`resume_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `database`.`resume_language` ;

CREATE TABLE IF NOT EXISTS `database`.`resume_language` (
  `resume_id` VARCHAR(64) NOT NULL,
  `language_id` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`resume_id`, `language_id`),
  INDEX `fk_resume_has_language_language1_idx` (`language_id` ASC),
  INDEX `fk_resume_has_language_resume1_idx` (`resume_id` ASC),
  CONSTRAINT `fk_resume_has_language_resume1`
    FOREIGN KEY (`resume_id`)
    REFERENCES `database`.`resume` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_resume_has_language_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `database`.`language` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `database` ;

-- -----------------------------------------------------
-- procedure insert_skill
-- -----------------------------------------------------

USE `database`;
DROP procedure IF EXISTS `database`.`insert_skill`;

DELIMITER $$
USE `database`$$
CREATE PROCEDURE `insert_skill` (
	skill_id varchar(64),
    skill_level int, 
	skill_name varchar(64),
	resume_id varchar(64)
    )
BEGIN
	insert into skill values (skill_id, skill_name, skill_level);
    insert into resume_skill values(resume_id,skill_id);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_keyword
-- -----------------------------------------------------

USE `database`;
DROP procedure IF EXISTS `database`.`insert_keyword`;

DELIMITER $$
USE `database`$$
CREATE PROCEDURE `insert_keyword` (
	keyword_id varchar(64),
    category varchar(64),
    word varchar(32),
    resume_id varchar(64)
)
BEGIN
	insert into keyword values (keyword_id, category, word, resume_id);
    insert into resume_keyword values (resume_id, keyword_id); 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_education
-- -----------------------------------------------------

USE `database`;
DROP procedure IF EXISTS `database`.`insert_education`;

DELIMITER $$
USE `database`$$
CREATE PROCEDURE `insert_education` (
	education_id varchar(64),
    start_y int,
    end_y int,
    title varchar(128),
    country varchar(64),
    city varchar(64),
    resume_id varchar(64)
)
BEGIN
	insert into education values (education_id, start_y, end_y, title, country, city);
    insert into resume_education values(education_id, resume_id);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_language
-- -----------------------------------------------------

USE `database`;
DROP procedure IF EXISTS `database`.`insert_language`;

DELIMITER $$
USE `database`$$
CREATE PROCEDURE `insert_language` (
	l_id varchar(64),
    l_name varchar(45),
    l_level int,
    resume_id varchar(64))
BEGIN
	insert into language values (l_id, l_name,l_level);
    insert into resume_language values(resume_id, l_id);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure delete_resume
-- -----------------------------------------------------

USE `database`;
DROP procedure IF EXISTS `database`.`delete_resume`;

DELIMITER $$
USE `database`$$
CREATE PROCEDURE `delete_resume` (
	resumeid varchar(64)
)
BEGIN
	DELETE resume_keyword, keyword 
		from resume_keyword inner join keyword on resume_keyword.keyword_id=keyword.id
	WHERE resume_keyword.resume_id = resumeid;
    
    DELETE resume_skill, skill
		from resume_skill inner join skill on resume_skill.skill_id=skill.id
	WHERE resume_skill.resume_id = resumeid;
    
    DELETE resume_language, language
		from resume_language inner join language on resume_language.language_id=language.id
	WHERE resume_language.resume_id = resumeid;
    
    DELETE resume_education, education
		from resume_education inner join education on resume_education.education_id=education.id
	WHERE resume_education.resume_id = resumeid;
    
    DELETE work_experience FROM work_experience
    WHERE resume_id=resumeid;
    
    DELETE resume FROM resume 
	WHERE id = resumeid;  

END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
